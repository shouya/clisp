/* header guard generated by genheader.pl */
#ifndef _hashtab_h_
#define _hashtab_h_

#include <defines.h>

#define HTAB_SI_SIZE 2048

/* string to int hash */
struct _Htab_SI_Node {
  char* key;
  int value;
  _Htab_SI_Node* next;
};
struct _Htab_SI {
  int n_nodes;
  Htab_SI_Node* nodes[HTAB_SI_SIZE];
};

typedef void (*HTAB_SI_EACH)(const char* k, int* v);

Htab_SI* htab_si_new(void);
void htab_si_destroy(Htab_SI* htab);

int htab_si_set(Htab_SI* htab, const char* k, int v);
int htab_si_del(Htab_SI* htab, const char* k);

int htab_si_find(Htab_SI* htab, const char* key, int* value);
void htab_si_foreach(Htab_SI* htab, HTAB_SI_EACH each);


/* name-atom hash table */
struct _Htab_NA_Node {
  char* name;
  Atom* atom;
  _Htab_NA_Node* next;
};


unsigned long htab_string_hash(const char* key, unsigned long hashsize);




#endif /* _hashtab_h_ */
